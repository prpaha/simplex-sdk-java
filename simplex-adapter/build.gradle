apply plugin: 'org.openapi.generator'

jar {
    enabled = true
}

compileJava.dependsOn('openApiGenerate')

def output = "$buildDir/generated"
def spec = "$projectDir/src/main/resources/simplex-openapi.yaml"
sourceSets.main.java.srcDir new File(buildDir, 'generated/src/main/java')

clean.doFirst {
    delete(output)
}

openApiGenerate {
    generatorName = "java"
    inputSpec = spec.toString()
    outputDir = output.toString()
    apiPackage = "ru.prpaha.simplex.api"
    invokerPackage = "ru.prpaha.simplex.invoker"
    modelPackage = "ru.prpaha.simplex.model"
    generateApiTests = false
    generateModelTests = false
    configOptions = [
            dateLibrary: "legacy"
    ]
}

dependencies {
    implementation('org.springframework.cloud:spring-cloud-starter-openfeign') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    // for OpenAPI generation
    implementation 'org.openapitools:openapi-generator-gradle-plugin:4.3.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'io.gsonfire:gson-fire:1.8.4'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}