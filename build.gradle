plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE' apply false
    id 'io.freefair.lombok' version '4.1.0' apply false
    id 'org.openapi.generator' version '4.3.1' apply false
}

apply plugin: 'org.openapi.generator'
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: "io.spring.dependency-management"

repositories {
    mavenLocal()
    jcenter()
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven { url "https://repo.spring.io/snapshot" }
    maven {
        url "http://packages.confluent.io/maven/"
    }
}

ext {
    libraryVersion = '0.1-SNAPSHOT'
    groupId = 'ru.prpaha.simplex'
    springBootVersion = project.properties['moduleSpringBootVersion'] ?: '2.1.4.RELEASE'
    springCloudVersion = project.properties['moduleSpringCloudVersion'] ?: 'Greenwich.SR1'
}

group = "${groupId}"
version =  "${libraryVersion}"
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

publishing {
    repositories {
        mavenLocal()
    }
    publications {
        mavenJava(MavenPublication) {
            groupId "${groupId}"

            artifact 'build/libs/YandexKassaSDK-0.0.3.jar'
        }
    }
}

configurations {
    fatJar
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'rpi-sense-hat-lib',
                'Implementation-Version': version
    }
    baseName = project.name
    from {
        configurations.fatJar.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}

ext.generatedSourcesDir = "$buildDir/generated/sources/java"

compileJava.dependsOn('openApiGenerate')

def output = "$buildDir/generated"
def spec = "$projectDir/src/main/resources/simplex-openapi.yaml"
sourceSets.main.java.srcDir new File(buildDir, 'generated/src/main/java')

clean.doFirst {
    delete(output)
}

openApiGenerate {
    generatorName = "java"
    inputSpec = spec.toString()
    outputDir = output.toString()
    apiPackage = "ru.prpaha.simplex.api"
    invokerPackage = "ru.prpaha.simplex.invoker"
    modelPackage = "ru.prpaha.simplex.model"
    generateApiTests = false
    generateModelTests = false
    configOptions = [
            dateLibrary: "legacy"
    ]
}

dependencies {
    implementation('org.springframework.cloud:spring-cloud-starter-openfeign') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    // for OpenAPI generation
    implementation 'org.openapitools:openapi-generator-gradle-plugin:4.3.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'io.gsonfire:gson-fire:1.8.4'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.boot:spring-boot-dependencies:2.3.3.RELEASE"
    }
}