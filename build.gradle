buildscript {
    repositories {
        gradlePluginPortal()
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven {
            url 'http://repo.hindsightsoftware.com/public-maven'
        }
        maven { url "https://repo1.maven.org/maven2" }
    }

    dependencies {
        classpath 'org.openapitools:openapi-generator-gradle-plugin:4.3.1'
    }
}

plugins {
    id 'java'
    id 'org.openapi.generator' version '4.3.1' apply false
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'org.openapi.generator'

repositories {
    mavenLocal()
    jcenter()
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        url "http://packages.confluent.io/maven/"
    }
}

ext {
    libVersion = '0.0.1'
}

version = "${libVersion}"

publishing {
    repositories {
        mavenLocal()
    }
    publications {
        mavenJava(MavenPublication) {
            groupId 'ru.prpaha'

            artifact "build/libs/simplex-sdk-java-${libVersion}.jar"
        }
    }
}

compileJava.dependsOn('openApiGenerate')

def output = "$buildDir/generated"
def spec = "$projectDir/src/main/resources/simplex-openapi.yaml"
sourceSets.main.java.srcDir new File(buildDir, 'generated/src/main/java')

clean.doFirst {
    delete(output)
}

openApiGenerate {
    generatorName = "java"
    inputSpec = spec.toString()
    outputDir = output.toString()
    apiPackage = "ru.prpaha.simplex.api"
    invokerPackage = "ru.prpaha.simplex.invoker"
    modelPackage = "ru.prpaha.simplex.model"
    generateApiTests = false
    generateModelTests = false
    configOptions = [
            dateLibrary: "legacy"
    ]
}

configurations {
    fatJar
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'rpi-sense-hat-lib',
                'Implementation-Version': version
    }
    baseName = project.name
    from {
        configurations.fatJar.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}

dependencies {
    implementation "org.springframework:spring-context:5.1.6.RELEASE"
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'io.swagger:swagger-annotations:1.6.2'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'commons-io:commons-io:2.8.0'

    implementation 'com.google.code.gson:gson:2.8.5'
    fatJar 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    fatJar 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    fatJar 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'io.gsonfire:gson-fire:1.8.4'
    fatJar 'io.gsonfire:gson-fire:1.8.4'

    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}