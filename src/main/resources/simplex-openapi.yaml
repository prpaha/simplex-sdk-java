openapi: 3.0.1
info:
  title: REST API for Simplex
  description: REST API for Simplex
  version: 2
servers:
  - url: /wallet/merchant/v2
paths:
  /quote:
    post:
      summary: GetQuote
      operationId: GetQuote
      description: The initial step is having the app presenting the digital currency price. A POST request is sent by the app asking for a price. Simplex REST API will receive the details listed below and respond, with an estimated price and a unique ID to mark the specific quote. In addition, specifying the payment methods in this step, will determine what payment options will be shown to the user upon the checkout.
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQuoteRequest'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuoteResponse'

  /partner/data:
    post:
      summary: PaymentRequest
      operationId: PaymentRequest
      description: When an end-user agrees to a specific quote (price and amounts of fiat and crypto), the app will send a REST API Payment Request.
        The Payment Request will include the quote ID received in the previous step, in addition to a new and unique payment ID that will be used to identify this payment by the partner and by Simplex.
      security:
        - ApiKeyAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'

  /events:
    get:
      summary: GetEvents
      operationId: GetEvents
      description: 'This is intended only for server-originated calls. When certain changes are made to a payment, the event for that change is generated on the event queue: whether the payment is submitted, approved or declined. The app provider must read these events by polling this API and act accordingly. This API endpoint may be optional, as the app provider can follow the Blockchain in order to update the end-user’s balance.'
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'

  /events/{id}:
    delete:
      summary: DeleteEvent
      operationId: DeleteEvent
      description: The events should be removed from partner’s event queue. Should be called after partner has handled the event. No error is reported if event is not found on queue.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    Events:
      type: object
      description: Events container
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'

    Event:
      type: object
      description: Event
      properties:
        event_id:
          type: string
        name:
          type: string
        timestamp:
          type: string
        payment:
          $ref: '#/components/schemas/Payment'

    Payment:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        fiat_total_amount:
          type: object
          properties:
            currency:
              $ref: '#/components/schemas/FiatCurrencies'
            amount:
              type: number
        crypto_total_amount:
          type: object
          properties:
            currency:
              $ref: '#/components/schemas/DigitalCurrencies'
            amount:
              type: number
        partner_end_user_id:
          type: string

    PaymentRequest:
      type: object
      description: Request for create payment
      properties:
        account_details:
          type: object
          description: PartnerEndUserAccount - User’s account details on the partner’s service
          properties:
            app_provider_id:
              type: string
              description: Your partner name (e.g. Wallex)
            app_version_id:
              type: string
              description: The unique ID for a specific app version
            app_end_user_id:
              type: string
              description: The end-user ID originated from the partner’s end. Same as end_user_id in the ‘GetQuote’ call
            app_install_date:
              type: string
              description: The day the App was installed by the end-user for the first time
            signup_login:
              type: object
              description: Information about the user’s session when first signed up with the partner’s service
              properties:
                ip:
                  type: string
                  description: IP of end-user when end-user signed up with with the partner
                location:
                  type: string
                  description: A geodetic point with latitude and longitude that should be in degrees and may be in decimal form (location.latitude,location.longitude, e.g. - 36.848460,-174.763332)
                uaid:
                  type: string
                  description: Value of UAID web cookie when end-user signed up with the partner (not related to mobile apps)
                accept_language:
                  type: string
                http_accept_language:
                  type: string
                user_agent:
                  type: string
                cookie_session_id:
                  type: string
                timestamp:
                  type: string
                  description: The timestamp of when end-user signed up with partner
        transaction_details:
          type: object
          description: PaymentDetails - Details related to this payment only - such as payment_id, requested amount of money, etc.
          properties:
            payment_details:
              type: object
              properties:
                quote_id:
                  type: string
                  description: Unique value will be provided by Simplex in the GetQuote response (UUID format)
                  format: uuid
                payment_id:
                  type: string
                  description: 'This value will be generated by the partner and needs to be unique (UUID) and to match the payment_id in the payment form HTTP post. As an example: d37ca9f4-4469-4968-ba40-749103ef3499. (8-4-4-4-12 characters)'
                  format: uuid
                order_id:
                  type: string
                  description: UUID generated by the app and will be utilized by the app when presenting order details to the end-user (e.g. 987e1597-e89b-12d3-a456-426655449555)
                  format: uuid
                fiat_total_amount:
                  type: object
                  description: The amount of money requested by the partner for this payment. This amount already includes any fees taken by the partner from the end-user and Simplex fees. This is the amount that Simplex will charge, whereas the cryptocurrency amount may depend on rate changes and whether the selected exchange promises the exchange rate or not (e.g. 100, USD)
                  properties:
                    currency:
                      $ref: '#/components/schemas/FiatCurrencies'
                    amount:
                      type: number
                requested_digital_amount:
                  type: object
                  properties:
                    currency:
                      $ref: '#/components/schemas/DigitalCurrencies'
                    amount:
                      type: number
                destination_wallet:
                  type: object
                  properties:
                    currency:
                      $ref: '#/components/schemas/DigitalCurrencies'
                    address:
                      type: string
                      description: 'Represents the end user’s wallet address. Must match the requested crypto currency (for example: BTC address for BTC purchase)'
                    tag:
                      type: string
                      description: For currencies that require a destination tag\memo\label (BNB, XLM, XRP, ATOM, etc.)
                original_http_ref_url:
                  type: string
                  description: URL of the site that referred the end-user to partner’s site/app

    PaymentResponse:
      type: object
      description: Response for create payment
      properties:
        is_kyc_update_required:
          type: boolean
          description: This response (“is_kyc_required”) means the API call (POST to partner/data) was valid. Some partners might require to upload KYC and they use this response as an indication. In this flow, end users will be uploading the KYC on Simplex checkout pages, so the value (true\false) can be ignored and just know that if this response comes back, the call was valid.

    GetQuoteResponse:
      type: object
      description: Response of Get Quote request
      properties:
        user_id:
          type: string
          description: The unique identifier for a user on the partner’s system, as sent in the quote request
        quote_id:
          type: string
          format: uuid
          description: Unique quote identifier in a UUID format
        wallet_id:
          type: string
          description: Partner name provided by Simplex, as sent in the quote request
        digital_money:
          $ref: '#/components/schemas/DigitalMoney'
        fiat_money:
          $ref: '#/components/schemas/FiatMoney'
        valid_until:
          type: string
        supported_digital_currencies:
          type: array
          items:
            type: string

    GetQuoteRequest:
      type: object
      description: Request body for Get Quote operation
      properties:
        end_user_id:
          type: string
          description: Unique identifier for a user on the partner’s system
        digital_currency:
          $ref: '#/components/schemas/DigitalCurrencies'
        fiat_currency":
          $ref: '#/components/schemas/FiatCurrencies'
        requested_currency:
          type: string
          example:
          - $ref: '#/components/schemas/FiatCurrencies'
          - $ref: '#/components/schemas/DigitalCurrencies'
        requested_amount:
          type: number
        wallet_id:
          type: string
          description: Partner name, as provided by Simplex
        client_ip:
          type: string
          description: The end user’s client IP address
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethods'

    FiatMoney:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/FiatCurrencies'
        base_amount:
          type: number
        total_amount:
          type: number

    DigitalMoney:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/DigitalCurrencies'
        amount:
          type: number

    PaymentMethods:
      type: string
      format: enum
      enum:
      - simplex_account
      - credit_card

    FiatCurrencies:
      type: string
      format: enum
      enum:
      - ARS
      - AUD
      - AZN
      - BRL
      - GBP
      - BGN
      - CAD
      - CLP
      - COP
      - CRC
      - CZK
      - DKK
      - DOP
      - EUR
      - GEL
      - HKD
      - HUF
      - INR
      - IDR
      - ILS
      - JPY
      - KZT
      - MYR
      - MXN
      - MDL
      - MAD
      - NAD
      - TWD
      - NZD
      - NGN
      - NOK
      - PEN
      - UYU
      - PHP
      - PLN
      - QAR
      - RON
      - RUB
      - SAR
      - SGD
      - ZAR
      - KRW
      - SEK
      - CHF
      - TRY
      - UAH
      - AED
      - USD
      - UZS
      - VND

    DigitalCurrencies:
      type: string
      format: enum
      enum:
      - BNB
      - BUSD
      - BTC
      - BCH
      - BSV
      - CEL
      - ATOM
      - COTI
      - CUSD
      - DAI
      - DASH
      - DEP
      - DFT
      - EOS
      - ETH
      - HBAR
      - HEDG
      - HUSD
      - ICX
      - MIOTA
      - LTC
      - NANO
      - PAX
      - QTUM
      - SAND
      - SGR
      - XLM
      - LUNA
      - SDT
      - XAUT
      - USDT
      - TOMO
      - AVA
      - TRX
      - USDC
      - USDK
      - VNDC
      - WAXP
      - XRP